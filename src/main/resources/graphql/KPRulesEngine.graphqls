schema {
  query: KPRulesEngineQuery
}

type KPRulesEngineQuery {
	GetAllRuleSets(count: Int): [RuleSet]
	GetRuleSetByName(name: String): RuleSet
	GetRuleSetById(ruleSetId: Long): RuleSet
	GetRulesByRuleSetName(ruleSetName: String): [Rule]
	FireAllRulesForRuleSet(
		ruleSetId: Long, 
		inserts: [InputFactType], 
		globals: [InputFactType], 
		outputParameter_pkg_name: String
		): [OutputParam]
}

type RuleSet{
	id: Long!
	name: String!
	package_name: String!
	content: String!
	createdAt: String!
	updatedAt: String!
	inserts: [FactType]
	globals: [FactType]
}

type Rule{
	id: Long!
	rule_activationgroup: String!
	rule_cond: String!
	rule_cons: String! 
	rule_name: String!
	rule_salience: String!	
	createdAt: String!
	updatedAt: String!
	rule_set: RuleSet!
}

type FactType{
	package_name: String
	variable_name: String
	fields: [Field]
}

type Field{
	name: String
	type: String
	value: String

}

input InputFactType{
	package_name: String
	class_name: String
	variable_name: String
	fields: [InputField]
}

input InputField{
	name: String
	type: String
	value: String
}

type OutputParam{
	package_name: String
	fields: [Field]
}
